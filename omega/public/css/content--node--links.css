/**
 * Mixin for styling form input elements.
 * Primarily for items like text, search, password, etc.
 */
/**
 * Mixin for styling form button elements.
 * Primarily for items like <a> <span> <button> <input type="submit">.
 */
.node--links {
  margin: 10px 0;
}

.node--links ul {
  margin: 0;
}

.node--links ul li {
  padding: 0;
}

.node--links a {
  border-radius: 4px;
  transition: all 0.15s ease-in-out;
  text-transform: none;
  font-variant: none;
  background: #EFEFEF;
  color: #1A1A1A;
  font-size: 12px;
  font-weight: normal;
  border: 1px solid #7A7A7A;
  cursor: pointer;
  display: inline-block;
  line-height: 1em;
  padding: 0.5em 0.75em;
  text-decoration: none;
  margin-right: 0.25em;
}

.node--links a:hover, .node--links a:active {
  background: #c9c9c9;
  color: black;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
