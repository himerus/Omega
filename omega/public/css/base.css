/**
 * @file
 * Omega's primary SCSS controller, that pulls in any relevant SCSS includes
 *
 * All styles declared in Omega use the !default property.
 * Any overrides in your subtheme will not include this and can override styles and variables selectively.
 * In your subtheme, you can comment out any of the @import declarations you like if you'd like to create your own styles for that element.
 *
 * @usage
 * @media all and (min-width: $tablet) {
 *   // styles here will apply to tablet mode and above defined in _omega-style-vars.scss
 * }
 * @media all and (min-width: $desktop) {
 *   // styles here will apply to desktop mode and above defined in _omega-style-vars.scss
 * }
 * @media all and (min-width: $tablet) and (max-width: $desktop) {
 *   // styles here will apply to tablet mode ONLY and not for desktop mode.
 * }
 */
/**
 * Mixin for styling form input elements.
 * Primarily for items like text, search, password, etc.
 */
/**
 * Mixin for styling form button elements.
 * Primarily for items like <a> <span> <button> <input type="submit">.
 */
.theme-demo-block {
  border-radius: 2px;
  padding: 20px;
  font-size: 80%;
  background: #EEE;
  border: 1px solid #C9E1BD;
  border-left: 8px solid #77B259;
  border-right: 8px solid #77B259;
  color: #325E1C;
  margin-top: 20px;
  opacity: 0.5;
  transition: opacity .25s ease-in-out;
  cursor: pointer;
}

.theme-demo-block.active-region {
  border: 1px solid #C9E1BD;
  border-left: 8px solid #77B259;
  border-right: 8px solid #77B259;
}

.theme-demo-block.inactive-region {
  border: 1px solid #F4DAA6;
  border-left: 8px solid #E09600;
  border-right: 8px solid #E09600;
  color: #734C00;
}

.theme-demo-block:hover {
  opacity: 1;
}

.theme-demo-block h3 {
  font-size: 12px;
  font-weight: normal;
  font-variant: small-caps;
  margin: 0;
}

.theme-demo-block .demo-block-content p {
  margin: 0;
}

.theme-demo-block ~ .block-region.demo-block {
  display: none;
}

/**
 * Mixin for styling form input elements.
 * Primarily for items like text, search, password, etc.
 */
/**
 * Mixin for styling form button elements.
 * Primarily for items like <a> <span> <button> <input type="submit">.
 */
/* Apply a natural box layout model to all elements http://www.paulirish.com/2012/box-sizing-border-box-ftw/ */
.omega-screen--indicator,
.omega-screen--indicator *,
.omega-screen--indicator *:before,
.omega-screen--indicator *:after {
  box-sizing: border-box;
}

.omega-screen--indicator {
  background-color: rgba(0, 0, 0, 0.85);
  zoom: 1;
  position: fixed;
  font-family: "Helvetica Neue", Arial, Helvetica, sans-serif;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: 999;
  padding: 8px;
  color: #FFF;
  padding-left: 70px;
  height: 70px;
  font-size: 11px;
}

.omega-screen--indicator .indicator-data {
  position: relative;
  padding-left: 10px;
}

.omega-screen--indicator .ologo {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 70px;
}

.omega-screen--indicator .ologo a {
  display: block;
}

.omega-screen--indicator .ologo img {
  max-height: 100%;
  max-width: 100%;
  width: auto;
}

.omega-screen--indicator h5 {
  font-family: "Helvetica Neue",Arial,Helvetica;
  margin: 0;
  margin-right: 1em;
  font-size: 11px;
  display: inline-block;
  min-width: 80px;
}

.omega-screen--indicator .data {
  font-weight: bold;
}

@media all and (min-width: 960px) {
  .omega-screen--indicator {
    left: auto;
    min-width: 350px;
    word-wrap: none;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
