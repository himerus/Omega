////
/// @group structure
////

@import 'defaults';
/// Mixin to apply simple transition.
/// @param {Text} $type [all] - Radius to apply to all corners.
/// @param {Integer} $speed [0.25s] - Value in seconds for the transition to complete.
/// @param {Text} $transition [ease-in-out] - Radius to apply to all corners.
@mixin transition($type: all, $speed: 0.25s, $transition: ease-in-out) {
  transition: $type $speed $transition;
}

/// Mixin to apply simple border radius.
/// @param {Integer} $rad [5px] - Radius to apply to all corners.
/// @todo Make a duplicate function to handle different values per corner.
@mixin corners($rad: 5px) {
  border-radius: $rad;
}

/// Mixin to apply a standardized shadow on elements.
/// @todo Make this shadow mixin customizable.
@mixin shadow() {
  box-shadow: 2px 2px 5px 0px rgba(0, 0, 0, 0.5);
}

/// Mixin to apply a standardized clearfix hack.
/// @todo Stop using clearfix.
@mixin clearfix() {
  *zoom: 1;

  &::before,
  &::after {
    content: '';
    display: table;
  }

  &::after {
    clear: both;
  }
}

/// Mixin for styling form input elements.
/// Primarily for items like text, search, password, etc.
@mixin input(
  $width: $form--input--width,
  $max-width: $form--input--width,
  $background: $form--input--bg,
  $border: $form--input--border,
  $border-active: $form--input--border--active,
  $border-focus: $form--input--border--focus,
  $padding: $form--input--padding,
  $font-size: $form--input--font-size,
  $font-weight: $form--input--font-weight,
  $border-radius: $form--input--border-radius
) {

  @include transition(all, 0.25s, ease-in-out);

  background: $background;
  width: $width;
  max-width: $max-width;
  padding: $padding;
  font-size: $font-size;
  font-weight: $font-weight;
  border: $border;

  @include corners($border-radius);

  &:active {
    border: $border-active;
  }

  &:focus {
    border: $border;
  }
}

/// Mixin for styling form button elements.
/// Primarily for items like `<a> <span> <button> <input type="submit">`.
/// @require {mixin} corners
/// @require {mixin} transition
/// @param {String} $text--transform [$button--text--transform] - CSS value for text-transform property.
/// @param {String} $text--variant [$button--text--variant] - CSS value for font-variant property.
/// @param {String} $bg-color [$button--bg-color] - CSS value for background color of the button.
/// @param {String} $bg-color--hover [$button--bg-color--hover] - CSS value for background color of the button during hover action.
/// @param {String} $font-color [$button--font-color] - CSS value for font color of the button.
/// @param {String} $font-color--hover [$button--font-color--hover] - CSS value for font color of the button during hover action.
/// @param {String} $font--size [$button--font--size] - CSS value for font size of the button.
/// @param {String} $font--weight [$button--font--weight] - CSS value for font weight of the button.
/// @param {String} $border [$button--border] - CSS value for font-variant property.
/// @param {String} $border-radius [$button--border-radius] - CSS value for border radius value.
/// @param {String} $padding [$button--padding] - CSS value for padding of the button element.
/// @param {String} $line-height [$button--line-height] - CSS value for line height.
/// @example
///   // This example doesn't pass any parameters, so takes on the appearance of the default values applied
///   // from the variables defined for default button values.
///   .my-default-button {
///     @include button();
///   }
///
///   // This example passes some parameters to customize the appearance of the button.
///   .my-customized-button {
///     @include button(
///       $bg-color: #FF0000,
///       $font-size: 32px,
///       $text--variant: small-caps,
///     );
///   }
@mixin button(
  $text--transform: $button--text--transform,
  $text--variant: $button--text--variant,
  $bg-color: $button--bg-color,
  $bg-color--hover: $button--bg-color--hover,
  $font-color: $button--font-color,
  $font-color--hover: $button--font-color--hover,
  $font--size: $button--font--size,
  $font--weight: $button--font--weight,
  $border: $button--border,
  $border-radius: $button--border-radius,
  $padding: $button--padding,
  $line-height: $button--line-height
) {

  @include corners($border-radius);
  @include transition(all, 0.15s, ease-in-out);

  text-transform: $text--transform;
  font-variant: $text--variant;
  background: $bg-color;
  color: $font-color;
  font-size: $font--size;
  font-weight: $font--weight;
  border: $border;
  cursor: pointer;
  display: inline-block;
  line-height: $line-height;
  padding: $padding;
  text-decoration: none;

  &:hover,
  &:active {
    background: $bg-color--hover;
    color: $font-color--hover;
  }
}
